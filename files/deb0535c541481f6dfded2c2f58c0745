namespace leetcode
{  public class ListNode {
     public int val;
     public ListNode next;
     public ListNode(int val=0, ListNode next=null) {
         this.val = val;
         this.next = next;
     }
 }
    class Program
    {
        public static void Main()
        {
            ListNode node1 = new ListNode(0);
            ListNode node2 = new ListNode(0, node1);
            ListNode node3 = new ListNode(1, node2);
            ListNode node4 = new ListNode(2, node3);
            
            ListNode node = node1;
            ListNode result = node;
            while(node != null || node.next != null){
                if (node.val != node.next.val){
                    result.next = node.next;
                };
                node = node.next;
            }

        }
    }
}
// int[] arr = new int[10];
// int n = 8, k = 2;
// while (n > 1)
// {
//     if (n % k == 0)
//     {
//         n /= k;
//         arr[k - 1]++;
//         continue;
//     }
//     else
//     {
//         k++;
//     }
// };
// int result = 1;
// for (int i = 0; i < arr.Length; i++)
// {
//     if (arr[i] >= 2) result *= (i + 1);
// }
// Console.WriteLine(result);